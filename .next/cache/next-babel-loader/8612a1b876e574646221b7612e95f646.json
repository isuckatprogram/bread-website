{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/runner/bread-website/pages/leaderboard.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\n\nvar Leaderboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Leaderboard, _React$Component);\n\n  function Leaderboard(props) {\n    var _this;\n\n    _classCallCheck(this, Leaderboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Leaderboard).call(this, props));\n    _this.state = {\n      loaded: false,\n      leaderboard: []\n    };\n    return _this;\n  }\n\n  _createClass(Leaderboard, [{\n    key: \"parseLeaderboard\",\n    value: function parseLeaderboard(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var id = document.getElementById('server-id').value;\n      this.getLeaderboard(id).then(function (leaderboard) {\n        if (typeof leaderboard != 'object') {\n          alert('Unknown Error, please contact us on our support server.');\n        } else {\n          _this2.setState({\n            loaded: true,\n            leaderboard: leaderboard\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getLeaderboard\",\n    value: function getLeaderboard(id) {\n      var b, j;\n      return _regeneratorRuntime.async(function getLeaderboard$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://bread.pdaniely.repl.co/leaderboard?id=\".concat(id), {\n                method: 'GET'\n              }));\n\n            case 2:\n              b = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(b.json());\n\n            case 5:\n              j = _context.sent;\n\n              if (!(j.ok == false)) {\n                _context.next = 9;\n                break;\n              }\n\n              alert(j.message);\n              return _context.abrupt(\"return\");\n\n            case 9:\n              return _context.abrupt(\"return\", j.leaderboard);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(_JSXStyle, {\n        id: \"187508933\",\n        __self: this\n      }, \".server.jsx-187508933{display:inline-block;border:2px solid;border-radius:10px 10px;width:230px;height:320px;padding:10px 10px;margin-left:5px;}.user.jsx-187508933{display:inline-block;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci9icmVhZC13ZWJzaXRlL3BhZ2VzL2xlYWRlcmJvYXJkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Ea0IsQUFHZ0MsQUFVQSxxQkFUSixBQVVuQixpQkFUMEIsd0JBQ1osWUFDQyxhQUNLLGtCQUNGLGdCQUNsQiIsImZpbGUiOiIvaG9tZS9ydW5uZXIvYnJlYWQtd2Vic2l0ZS9wYWdlcy9sZWFkZXJib2FyZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTGF5b3V0XCJcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIlxuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExlYWRlcmJvYXJkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICBjb25zdHJ1Y3Rvcihwcm9wcyl7XG4gICAgc3VwZXIocHJvcHMpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbG9hZGVkOiBmYWxzZSxcbiAgICAgIGxlYWRlcmJvYXJkOiBbXVxuICAgIH1cbiAgfVxuXG4gIHBhcnNlTGVhZGVyYm9hcmQoZSl7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICB2YXIgaWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VydmVyLWlkJykudmFsdWVcbiAgICB0aGlzLmdldExlYWRlcmJvYXJkKGlkKS50aGVuKChsZWFkZXJib2FyZCk9PntcbiAgICAgIGlmICh0eXBlb2YgbGVhZGVyYm9hcmQgIT0gJ29iamVjdCcpe1xuICAgICAgICBhbGVydCgnVW5rbm93biBFcnJvciwgcGxlYXNlIGNvbnRhY3QgdXMgb24gb3VyIHN1cHBvcnQgc2VydmVyLicpXG4gICAgICB9ZWxzZXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgbG9hZGVkOiB0cnVlLFxuICAgICAgICAgIGxlYWRlcmJvYXJkOiBsZWFkZXJib2FyZFxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBhc3luYyBnZXRMZWFkZXJib2FyZChpZCl7XG4gICAgdmFyIGIgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9icmVhZC5wZGFuaWVseS5yZXBsLmNvL2xlYWRlcmJvYXJkP2lkPSR7aWR9YCwge1xuICAgICAgbWV0aG9kOiAnR0VUJ1xuICAgIH0pXG5cbiAgICB2YXIgaiA9IGF3YWl0IGIuanNvbigpXG5cbiAgICBpZihqLm9rID09IGZhbHNlKXtcbiAgICAgIGFsZXJ0KGoubWVzc2FnZSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHJldHVybiBqLmxlYWRlcmJvYXJkXG4gIH1cblxuXG4gIHJlbmRlcigpe1xuXG4gIHJldHVybiAoXG4gICAgPExheW91dCBzdHlsZT17eyB0ZXh0QWxpZ246ICdjZW50ZXInfX0+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnNlcnZlcntcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4O1xuICAgICAgICAgIHdpZHRoOiAyMzBweDtcbiAgICAgICAgICBoZWlnaHQ6IDMyMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTBweDtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnVzZXJ7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPkJyZWFkIC0gTGVhZGVyYm9hcmQ8L3RpdGxlPlxuICAgICAgPC9IZWFkPlxuICAgICAgXG4gICAgICA8YnIvPlxuICAgICAgPGZvcm0gb25TdWJtaXQ9e3RoaXMucGFyc2VMZWFkZXJib2FyZC5iaW5kKHRoaXMpfT5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJzZWFyY2hcIiBwbGFjZWhvbGRlcj1cIlNlcnZlciBOYW1lL0lEXCIgcmVxdWlyZWQgaWQ9XCJzZXJ2ZXItaWRcIiAvPlxuICAgICAgPC9mb3JtPlxuICAgICAgXG4gICAgICA8ZGl2IGlkPVwibGVhZGVyYm9hcmRcIj5cbiAgICAgICAge3RoaXMuc3RhdGUubG9hZGVkID8gKFxuICAgICAgICAgIHRoaXMuc3RhdGUubGVhZGVyYm9hcmQubWFwKChsKT0+e1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlclwiPlxuICAgICAgICAgICAgICA8aW1nIHNyYz17bC51c2VyLmltYWdlfS8+XG4gICAgICAgICAgICAgIDxoMj57bC51c2VyLnVzZXJuYW1lfTwvaDI+XG5cbiAgICAgICAgICAgICAgPHA+R2FtZXMgUGxheWVkOiB7bC5nYW1lc1BsYXllZH08L3A+XG4gICAgICAgICAgICAgIDxwPkdhbWVzIFdvbjoge2wuZ2FtZXNXb259PC9wPlxuICAgICAgICAgICAgICA8cD5HYW1lcyBDb250cm9sbGVkOiB7bC5nYW1lc0NvbnRyb2xsZWR9PC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgICAgfSlcbiAgICAgICAgKSA6IChcbiAgICAgICAgIDxwPkVudGVyIHNlcnZlciBpZCBpbiB0aGUgdGV4dGJveCB0byBnZXQgc2VydmVyPC9wPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgPC9MYXlvdXQ+XG4gIClcbiAgfVxufSJdfQ== */\\n/*@ sourceURL=/home/runner/bread-website/pages/leaderboard.js */\"), __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        className: \"jsx-187508933\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Bread - Leaderboard\")), __jsx(\"br\", {\n        className: \"jsx-187508933\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), __jsx(\"form\", {\n        onSubmit: this.parseLeaderboard.bind(this),\n        className: \"jsx-187508933\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"search\",\n        placeholder: \"Server Name/ID\",\n        required: true,\n        id: \"server-id\",\n        className: \"jsx-187508933\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        id: \"leaderboard\",\n        className: \"jsx-187508933\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.loaded ? this.state.leaderboard.map(function (l) {\n        return __jsx(\"div\", {\n          className: \"jsx-187508933\" + \" \" + \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: l.user.image,\n          className: \"jsx-187508933\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), __jsx(\"h2\", {\n          className: \"jsx-187508933\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, l.user.username), __jsx(\"p\", {\n          className: \"jsx-187508933\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Games Played: \", l.gamesPlayed), __jsx(\"p\", {\n          className: \"jsx-187508933\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Games Won: \", l.gamesWon), __jsx(\"p\", {\n          className: \"jsx-187508933\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Games Controlled: \", l.gamesControlled));\n      }) : __jsx(\"p\", {\n        className: \"jsx-187508933\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Enter server id in the textbox to get server\")));\n    }\n  }]);\n\n  return Leaderboard;\n}(React.Component);\n\nexport { Leaderboard as default };","map":{"version":3,"sources":["/home/runner/bread-website/pages/leaderboard.js"],"names":["Layout","Head","Link","Leaderboard","props","state","loaded","leaderboard","e","preventDefault","id","document","getElementById","value","getLeaderboard","then","alert","setState","fetch","method","b","json","j","ok","message","textAlign","parseLeaderboard","bind","map","l","user","image","username","gamesPlayed","gamesWon","gamesControlled","React","Component"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\"\nimport Head from \"next/head\"\nimport Link from \"next/link\"\n\nexport default class Leaderboard extends React.Component{\n  constructor(props){\n    super(props)\n\n    this.state = {\n      loaded: false,\n      leaderboard: []\n    }\n  }\n\n  parseLeaderboard(e){\n    e.preventDefault()\n\n    var id = document.getElementById('server-id').value\n    this.getLeaderboard(id).then((leaderboard)=>{\n      if (typeof leaderboard != 'object'){\n        alert('Unknown Error, please contact us on our support server.')\n      }else{\n        this.setState({\n          loaded: true,\n          leaderboard: leaderboard\n        })\n      }\n    })\n  }\n\n  async getLeaderboard(id){\n    var b = await fetch(`https://bread.pdaniely.repl.co/leaderboard?id=${id}`, {\n      method: 'GET'\n    })\n\n    var j = await b.json()\n\n    if(j.ok == false){\n      alert(j.message)\n      return\n    }\n\n    return j.leaderboard\n  }\n\n\n  render(){\n\n  return (\n    <Layout style={{ textAlign: 'center'}}>\n\n      <style jsx>{`\n        .server{\n          display: inline-block;\n          border: 2px solid;\n          border-radius: 10px 10px;\n          width: 230px;\n          height: 320px;\n          padding: 10px 10px;\n          margin-left: 5px;\n        }\n\n        .user{\n          display: inline-block;\n        }\n      `}</style>\n      <Head>\n        <title>Bread - Leaderboard</title>\n      </Head>\n      \n      <br/>\n      <form onSubmit={this.parseLeaderboard.bind(this)}>\n        <input type=\"search\" placeholder=\"Server Name/ID\" required id=\"server-id\" />\n      </form>\n      \n      <div id=\"leaderboard\">\n        {this.state.loaded ? (\n          this.state.leaderboard.map((l)=>{\n            return (\n            <div className=\"user\">\n              <img src={l.user.image}/>\n              <h2>{l.user.username}</h2>\n\n              <p>Games Played: {l.gamesPlayed}</p>\n              <p>Games Won: {l.gamesWon}</p>\n              <p>Games Controlled: {l.gamesControlled}</p>\n            </div>\n            )\n          })\n        ) : (\n         <p>Enter server id in the textbox to get server</p>\n        )}\n      </div>\n    </Layout>\n  )\n  }\n}"]},"metadata":{},"sourceType":"module"}